﻿
// <auto-generated />
#pragma warning disable

using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;

namespace SourceGenerator.dev;

public static partial class DeviceExtensions
{
    // Configuration
    public static ISignalFConfiguration AddClass3DeviceConfiguration(this ISignalFConfiguration configuration, Action<IClass3DeviceConfigurationBuilder> builder)
    {
        return configuration.AddDeviceConfiguration<IClass3DeviceConfigurationBuilder, Class3DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass3DeviceConfiguration<TType>(this ISignalFConfiguration configuration, Action<IClass3DeviceConfigurationBuilder> builder)
        where TType : Class3
    {
        return configuration.AddDeviceConfiguration<IClass3DeviceConfigurationBuilder, Class3DeviceOptions, TType>(builder);
    }

    // Definition
    public static ISignalFConfiguration AddClass3DeviceDefinition(this ISignalFConfiguration configuration, Action<IClass3DeviceDefinitionBuilder> builder)
    {
        return configuration.AddDeviceDefinition<IClass3DeviceDefinitionBuilder, Class3DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass3DeviceDefinition<TType>(this ISignalFConfiguration configuration, Action<IClass3DeviceDefinitionBuilder> builder)
        where TType : Class3
    {
        return configuration.AddDeviceDefinition<IClass3DeviceDefinitionBuilder, Class3DeviceOptions, TType>(builder);
    }

    // Template
    public static ISignalFConfiguration AddClass3DeviceTemplate(this ISignalFConfiguration configuration, Action<IClass3DeviceTemplateBuilder> builder)
    {
        return configuration.AddDeviceTemplate<IClass3DeviceTemplateBuilder, Class3DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass3DeviceTemplate<TType>(this ISignalFConfiguration configuration, Action<IClass3DeviceTemplateBuilder> builder)
        where TType : Class3
    {
        return configuration.AddDeviceTemplate<IClass3DeviceTemplateBuilder, Class3DeviceOptions, TType>(builder);
    }

    public static IServiceCollection AddClass3(this IServiceCollection services)
    {
        return services.AddTransient<Class3>()
                       .AddTransient<IClass3DeviceConfigurationBuilder, Class3DeviceConfigurationBuilder>()
                       .AddTransient<IClass3DeviceDefinitionBuilder, Class3DeviceDefinitionBuilder>()
                       .AddTransient<IClass3DeviceTemplateBuilder, Class3DeviceTemplateBuilder>();
    }
}
