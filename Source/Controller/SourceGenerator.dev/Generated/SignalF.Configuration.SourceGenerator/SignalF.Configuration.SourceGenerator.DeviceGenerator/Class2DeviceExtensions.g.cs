﻿
// <auto-generated />
#pragma warning disable

using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;
using SignalF.Configuration.Devices;
using SignalF.Controller.Configuration;
using SignalF.Datamodel.Hardware;

namespace SourceGenerator.dev;

public static partial class DeviceExtensions
{
    // Configuration
    public static ISignalFConfiguration AddClass2DeviceConfiguration(this ISignalFConfiguration configuration, Action<IClass2ConfigurationBuilder> builder)
    {
        return configuration.AddDeviceConfiguration<IClass2ConfigurationBuilder, Class2DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass2DeviceConfiguration<TType>(this ISignalFConfiguration configuration, Action<IClass2ConfigurationBuilder> builder)
        where TType : Class2
    {
        return configuration.AddDeviceConfiguration<IClass2ConfigurationBuilder, Class2DeviceOptions, TType>(builder);
    }

    // Definition
    public static ISignalFConfiguration AddClass2DeviceDefinition(this ISignalFConfiguration configuration, Action<IClass2DefinitionBuilder> builder)
    {
        return configuration.AddDeviceDefinition<IClass2DefinitionBuilder, Class2DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass2DeviceDefinition<TType>(this ISignalFConfiguration configuration, Action<IClass2DefinitionBuilder> builder)
        where TType : Class2
    {
        return configuration.AddDeviceDefinition<IClass2DefinitionBuilder, Class2DeviceOptions, TType>(builder);
    }

    // Template
    public static ISignalFConfiguration AddClass2DeviceTemplate(this ISignalFConfiguration configuration, Action<IClass2TemplateBuilder> builder)
    {
        return configuration.AddDeviceTemplate<IClass2TemplateBuilder, Class2DeviceOptions>(builder);
    }

    public static ISignalFConfiguration AddClass2DeviceTemplate<TType>(this ISignalFConfiguration configuration, Action<IClass2TemplateBuilder> builder)
        where TType : Class2
    {
        return configuration.AddDeviceTemplate<IClass2TemplateBuilder, Class2DeviceOptions, TType>(builder);
    }

    public static IServiceCollection AddClass2(this IServiceCollection services)
    {
        return services.AddTransient<Class2>()
                       .AddTransient<IClass2ConfigurationBuilder, Class2ConfigurationBuilder>()
                       .AddTransient<IClass2DefinitionBuilder, Class2DefinitionBuilder>()
                       .AddTransient<IClass2TemplateBuilder, Class2TemplateBuilder>();
    }
}
