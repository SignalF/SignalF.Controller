﻿<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".g.cs" #>
<# string className = (string)Session["className"];#>
<# string classNamespace = (string)Session["classNamespace"];#>
<# string globalNamespace = (string)Session["globalNamespace"];#>

// <auto-generated />
#pragma warning disable

using SignalF.Configuration.Calculators;
using SignalF.Datamodel.Calculation;

namespace <#= classNamespace #>;

public partial interface
    I<#= className #>CalculatorTemplateBuilder : I<#= className #>CalculatorTemplateBuilder<I<#= className #>CalculatorTemplateBuilder,
        ICalculatorTemplate, <#= className #>CalculatorOptions>
{
}

public partial interface
    I<#= className #>CalculatorTemplateBuilder<out TBuilder, in TConfiguration, in TOptions> : ICalculatorTemplateBuilder<TBuilder, TConfiguration,
        TOptions>
    where TBuilder : ICalculatorTemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : ICalculatorTemplate
    where TOptions : <#= className #>CalculatorOptions
{
}

public partial class <#= className #>CalculatorTemplateBuilder
    : <#= className #>CalculatorTemplateBuilder<<#= className #>CalculatorTemplateBuilder, I<#= className #>CalculatorTemplateBuilder,
          ICalculatorTemplate, <#= className #>CalculatorOptions>, I<#= className #>CalculatorTemplateBuilder
{
    protected override I<#= className #>CalculatorTemplateBuilder This => this;
}

public abstract partial class <#= className #>CalculatorTemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : CalculatorTemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I<#= className #>CalculatorTemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I<#= className #>CalculatorTemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : <#= className #>CalculatorTemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : ICalculatorTemplate
    where TOptions : <#= className #>CalculatorOptions
{
}
