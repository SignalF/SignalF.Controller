﻿<#@ template language="C#" #>
<#@ parameter type="string" name="className"#>
<#@ parameter type="string" name="classNamespace"#>
<#@ parameter type="string" name="globalNamespace"#>

// <auto-generated />
#pragma warning disable

using SignalF.Configuration.Calculators;
using SignalF.Datamodel.Calculation;

namespace <#= classNamespace #>;

public partial interface
    I<#= className #>TemplateBuilder : I<#= className #>TemplateBuilder<I<#= className #>TemplateBuilder,
        ICalculatorTemplate, <#= className #>Options>
{
}

public partial interface
    I<#= className #>TemplateBuilder<out TBuilder, in TConfiguration, in TOptions> : ICalculatorTemplateBuilder<TBuilder, TConfiguration,
        TOptions>
    where TBuilder : ICalculatorTemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : ICalculatorTemplate
    where TOptions : <#= className #>Options
{
}

public partial class <#= className #>TemplateBuilder
    : <#= className #>TemplateBuilder<<#= className #>TemplateBuilder, I<#= className #>TemplateBuilder,
          ICalculatorTemplate, <#= className #>Options>, I<#= className #>TemplateBuilder
{
    protected override I<#= className #>TemplateBuilder This => this;
}

public abstract partial class <#= className #>TemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : CalculatorTemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I<#= className #>TemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I<#= className #>TemplateBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : <#= className #>TemplateBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : ICalculatorTemplate
    where TOptions : <#= className #>Options
{
}
