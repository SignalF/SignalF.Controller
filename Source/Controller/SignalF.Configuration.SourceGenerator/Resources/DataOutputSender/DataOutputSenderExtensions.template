﻿<#@ template language="C#" #>
<#@ parameter type="string" name="className"#>
<#@ parameter type="string" name="classNamespace"#>
<#@ parameter type="string" name="globalNamespace"#>

// <auto-generated />
#pragma warning disable

using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;
using SignalF.Configuration.DataOutput;
using SignalF.Controller.DataOutput;

namespace <#= classNamespace #>;

public static class DataOutputSenderExtensions
{
    //private const string <#= className #>DefaultName = "DataOutputSenderConsole";

    public static IServiceCollection Add<#= className #>(this IServiceCollection services)
    {
        return services.AddTransient<<#= className #>>()
                       .AddTransient<I<#= className #>ConfigurationBuilder<<#= className #>Options>, <#= className #>ConfigurationBuilder<<#= className #>Options>>();
    }


    public static ISignalFConfiguration Add<#= className #>Configuration<TOptions>(this ISignalFConfiguration configuration
        , Action<I<#= className #>ConfigurationBuilder<TOptions>> builder)
    where TOptions : <#= className #>Options
    {
        return configuration
            .AddDataOutputSenderConfiguration<I<#= className #>ConfigurationBuilder<TOptions>
                , TOptions, IDataOutputSender>(builder);
    }

    public static ISignalFConfiguration Add<#= className #>Configuration(this ISignalFConfiguration configuration
        , Action<I<#= className #>ConfigurationBuilder<<#= className #>Options>> builder)
    {
        return configuration
            .AddDataOutputSenderConfiguration<I<#= className #>ConfigurationBuilder<<#= className #>Options>
                , <#= className #>Options, IDataOutputSender>(builder);
    }
}