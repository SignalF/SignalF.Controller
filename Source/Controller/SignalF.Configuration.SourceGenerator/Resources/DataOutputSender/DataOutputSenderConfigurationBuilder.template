﻿<#@ template language="C#" #>
<#@ parameter type="string" name="className"#>
<#@ parameter type="string" name="classNamespace"#>
<#@ parameter type="string" name="globalNamespace"#>

// <auto-generated />
#pragma warning disable

using SignalF.Configuration.DataOutput;
using SignalF.Datamodel.DataOutput;

namespace <#= classNamespace #>;

public interface I<#= className #>ConfigurationBuilder
    : I<#= className #>ConfigurationBuilder<<#= className #>Options>
{
}

public interface I<#= className #>ConfigurationBuilder<in TOptions>
    : I<#= className #>ConfigurationBuilder<I<#= className #>ConfigurationBuilder<TOptions>, IDataOutputSenderConfiguration, TOptions>
    where TOptions : <#= className #>Options
{
}

public interface I<#= className #>ConfigurationBuilder<out TBuilder, in TConfiguration, in TOptions>
    : IDataOutputSenderConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I<#= className #>ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDataOutputSenderConfiguration
    where TOptions : <#= className #>Options
{
}

public class <#= className #>ConfigurationBuilder
    : <#= className #>ConfigurationBuilder<<#= className #>Options>, I<#= className #>ConfigurationBuilder
{
    protected override I<#= className #>ConfigurationBuilder This => this;
}

public class <#= className #>ConfigurationBuilder<TOptions>
    : <#= className #>ConfigurationBuilder<<#= className #>ConfigurationBuilder<TOptions>, I<#= className #>ConfigurationBuilder<TOptions>,
          IDataOutputSenderConfiguration,
          TOptions>, I<#= className #>ConfigurationBuilder<TOptions>
    where TOptions : <#= className #>Options
{
    protected override I<#= className #>ConfigurationBuilder<TOptions> This => this;
}

public abstract class <#= className #>ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : DataOutputSenderConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I<#= className #>ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I<#= className #>ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : <#= className #>ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDataOutputSenderConfiguration
    where TOptions : <#= className #>Options
{
}
