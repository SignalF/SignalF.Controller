using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;
using SignalF.Configuration.Devices;
using SignalF.Controller.Configuration;
using SignalF.Datamodel.Hardware;

namespace {0};

public partial interface
    I{1}ConfigurationBuilder : I{1}ConfigurationBuilder<I{1}ConfigurationBuilder,
        IDeviceConfiguration, {1}DeviceOptions>
{{
}}

public partial interface
    I{1}ConfigurationBuilder<out TBuilder, in TConfiguration, in TOptions> : IDeviceConfigurationBuilder<TBuilder, TConfiguration,
        TOptions>
    where TBuilder : IDeviceConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceConfiguration
    where TOptions : {1}DeviceOptions
{{
}}

public partial class {1}ConfigurationBuilder
    : {1}ConfigurationBuilder<{1}ConfigurationBuilder, I{1}ConfigurationBuilder,
          IDeviceConfiguration, {1}DeviceOptions>, I{1}ConfigurationBuilder
{{
    protected override I{1}ConfigurationBuilder This => this;
}}

public abstract partial class {1}ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : DeviceConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I{1}ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I{1}ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : {1}ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceConfiguration
    where TOptions : {1}DeviceOptions
{{
}}
