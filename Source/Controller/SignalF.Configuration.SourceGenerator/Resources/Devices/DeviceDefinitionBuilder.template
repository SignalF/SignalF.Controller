﻿<#@ template hostspecific="true" language="C#" #>
<#@ output extension=".g.cs" #>
<# string className = (string)Session["className"];#>
<# string classNamespace = (string)Session["classNamespace"];#>
<# string globalNamespace = (string)Session["globalNamespace"];#>

// <auto-generated />
#pragma warning disable

using SignalF.Configuration.Devices;
using SignalF.Datamodel.Hardware;

namespace <#= classNamespace #>;

public partial interface
    I<#= className #>DeviceDefinitionBuilder : I<#= className #>DeviceDefinitionBuilder<I<#= className #>DeviceDefinitionBuilder,
        IDeviceDefinition, <#= className #>DeviceOptions>
{
}

public partial interface
    I<#= className #>DeviceDefinitionBuilder<out TBuilder, in TConfiguration, in TOptions> : IDeviceDefinitionBuilder<TBuilder, TConfiguration,
        TOptions>
    where TBuilder : IDeviceDefinitionBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceDefinition
    where TOptions : <#= className #>DeviceOptions
{
}

public partial class <#= className #>DeviceDefinitionBuilder
    : <#= className #>DeviceDefinitionBuilder<<#= className #>DeviceDefinitionBuilder, I<#= className #>DeviceDefinitionBuilder,
          IDeviceDefinition, <#= className #>DeviceOptions>, I<#= className #>DeviceDefinitionBuilder
{
    protected override I<#= className #>DeviceDefinitionBuilder This => this;
}

public abstract partial class <#= className #>DeviceDefinitionBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : DeviceDefinitionBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I<#= className #>DeviceDefinitionBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I<#= className #>DeviceDefinitionBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : <#= className #>DeviceDefinitionBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceDefinition
    where TOptions : <#= className #>DeviceOptions
{
}
