﻿<#@ template language="C#" #>

// <auto-generated />
#pragma warning disable

using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;

namespace <#= _classNamespace #>;

public static partial class DeviceExtensions
{
    // Configuration
    public static ISignalFConfiguration Add<#= _className #>DeviceConfiguration(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceConfigurationBuilder> builder)
    {
        return configuration.AddDeviceConfiguration<I<#= _className #>DeviceConfigurationBuilder, <#= _className #>DeviceOptions>(builder);
    }

    public static ISignalFConfiguration Add<#= _className #>DeviceConfiguration<TType>(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceConfigurationBuilder> builder)
        where TType : <#= _className #>
    {
        return configuration.AddDeviceConfiguration<I<#= _className #>DeviceConfigurationBuilder, <#= _className #>DeviceOptions, TType>(builder);
    }

    // Definition
    public static ISignalFConfiguration Add<#= _className #>DeviceDefinition(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceDefinitionBuilder> builder)
    {
        return configuration.AddDeviceDefinition<I<#= _className #>DeviceDefinitionBuilder, <#= _className #>DeviceOptions>(builder);
    }

    public static ISignalFConfiguration Add<#= _className #>DeviceDefinition<TType>(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceDefinitionBuilder> builder)
        where TType : <#= _className #>
    {
        return configuration.AddDeviceDefinition<I<#= _className #>DeviceDefinitionBuilder, <#= _className #>DeviceOptions, TType>(builder);
    }

    // Template
    public static ISignalFConfiguration Add<#= _className #>DeviceTemplate(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceTemplateBuilder> builder)
    {
        return configuration.AddDeviceTemplate<I<#= _className #>DeviceTemplateBuilder, <#= _className #>DeviceOptions>(builder);
    }

    public static ISignalFConfiguration Add<#= _className #>DeviceTemplate<TType>(this ISignalFConfiguration configuration, Action<I<#= _className #>DeviceTemplateBuilder> builder)
        where TType : <#= _className #>
    {
        return configuration.AddDeviceTemplate<I<#= _className #>DeviceTemplateBuilder, <#= _className #>DeviceOptions, TType>(builder);
    }

    public static IServiceCollection Add<#= _className #>(this IServiceCollection services)
    {
        return services.AddTransient<<#= _className #>>()
                       .AddTransient<I<#= _className #>DeviceConfigurationBuilder, <#= _className #>DeviceConfigurationBuilder>()
                       .AddTransient<I<#= _className #>DeviceDefinitionBuilder, <#= _className #>DeviceDefinitionBuilder>()
                       .AddTransient<I<#= _className #>DeviceTemplateBuilder, <#= _className #>DeviceTemplateBuilder>();
    }
}
