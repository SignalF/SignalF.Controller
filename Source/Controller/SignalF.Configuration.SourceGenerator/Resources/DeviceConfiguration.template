using Microsoft.Extensions.DependencyInjection;
using SignalF.Configuration;
using SignalF.Configuration.Devices;
using SignalF.Controller.Configuration;
using SignalF.Datamodel.Hardware;

namespace {0};

public partial class {1}DeviceOptions : DeviceOptions
{{
}}

public partial interface
    I{1}ConfigurationBuilder : I{1}ConfigurationBuilder<I{1}ConfigurationBuilder,
        IDeviceConfiguration, {1}DeviceOptions>
{{
}}

public partial interface
    I{1}ConfigurationBuilder<out TBuilder, in TConfiguration, in TOptions> : IDeviceConfigurationBuilder<TBuilder, TConfiguration,
        TOptions>
    where TBuilder : IDeviceConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceConfiguration
    where TOptions : {1}DeviceOptions
{{
}}

public partial class {1}ConfigurationBuilder
    : {1}ConfigurationBuilder<{1}ConfigurationBuilder, I{1}ConfigurationBuilder,
          IDeviceConfiguration, {1}DeviceOptions>, I{1}ConfigurationBuilder
{{
    protected override I{1}ConfigurationBuilder This => this;
}}

public abstract partial class {1}ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    : DeviceConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
      , I{1}ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TBuilder : I{1}ConfigurationBuilder<TBuilder, TConfiguration, TOptions>
    where TImpl : {1}ConfigurationBuilder<TImpl, TBuilder, TConfiguration, TOptions>
    where TConfiguration : IDeviceConfiguration
    where TOptions : {1}DeviceOptions
{{
}}

public static partial class {1}Extensions
{{
    public static ISignalFConfiguration Add{1}Configuration(this ISignalFConfiguration configuration,
                                                               Action<I{1}ConfigurationBuilder> builder)
    {{
        return configuration.AddDeviceConfiguration<I{1}ConfigurationBuilder, {1}DeviceOptions>(builder);
    }}

    public static ISignalFConfiguration Add{1}Configuration<TType>(this ISignalFConfiguration configuration
                                                                      , Action<I{1}ConfigurationBuilder> builder)
        where TType : {1}
    {{
        return configuration.AddDeviceConfiguration<I{1}ConfigurationBuilder, {1}DeviceOptions, TType>(builder);
    }}

    public static IServiceCollection Add{1}(this IServiceCollection services)
    {{
        return services.AddTransient<{1}>()
                       .AddTransient<I{1}ConfigurationBuilder, {1}ConfigurationBuilder>;
    }}
}}
